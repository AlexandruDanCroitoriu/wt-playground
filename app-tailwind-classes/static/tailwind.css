/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, var(--font-sans, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"));
    font-feature-settings: var(--default-font-feature-settings, initial);
    font-variation-settings: var(--default-font-variation-settings, initial);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, var(--font-mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace));
    font-feature-settings: var(--default-mono-font-feature-settings, initial);
    font-variation-settings: var(--default-mono-font-variation-settings, initial);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .\!right-5 {
    right: calc(var(--spacing, 0.25rem) * 5) !important;
  }
  .\!right-11 {
    right: calc(var(--spacing, 0.25rem) * 11) !important;
  }
  .right-0 {
    right: calc(var(--spacing, 0.25rem) * 0);
  }
  .right-1 {
    right: calc(var(--spacing, 0.25rem) * 1);
  }
  .right-5 {
    right: calc(var(--spacing, 0.25rem) * 5);
  }
  .right-6 {
    right: calc(var(--spacing, 0.25rem) * 6);
  }
  .left-1 {
    left: calc(var(--spacing, 0.25rem) * 1);
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing, 0.25rem) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing, 0.25rem) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing, 0.25rem) * 2);
  }
  .mr-4 {
    margin-right: calc(var(--spacing, 0.25rem) * 4);
  }
  .ml-2 {
    margin-left: calc(var(--spacing, 0.25rem) * 2);
  }
  .ml-7 {
    margin-left: calc(var(--spacing, 0.25rem) * 7);
  }
  .ml-auto {
    margin-left: auto;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-4 {
    height: calc(var(--spacing, 0.25rem) * 4);
  }
  .h-6 {
    height: calc(var(--spacing, 0.25rem) * 6);
  }
  .h-10 {
    height: calc(var(--spacing, 0.25rem) * 10);
  }
  .h-\[40px\] {
    height: 40px;
  }
  .h-\[100vh\] {
    height: 100vh;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing, 0.25rem) * 4);
  }
  .w-6 {
    width: calc(var(--spacing, 0.25rem) * 6);
  }
  .w-10 {
    width: calc(var(--spacing, 0.25rem) * 10);
  }
  .w-11 {
    width: calc(var(--spacing, 0.25rem) * 11);
  }
  .w-40 {
    width: calc(var(--spacing, 0.25rem) * 40);
  }
  .w-60 {
    width: calc(var(--spacing, 0.25rem) * 60);
  }
  .w-\[100vw\] {
    width: 100vw;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[220px\] {
    max-width: 220px;
  }
  .max-w-\[1000px\] {
    max-width: 1000px;
  }
  .min-w-\[200px\] {
    min-width: 200px;
  }
  .min-w-\[240px\] {
    min-width: 240px;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-2 {
    flex: 2;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing, 0.25rem) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing, 0.25rem) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing, 0.25rem) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing, 0.25rem) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-visible {
    overflow-x: visible;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-md {
    border-radius: var(--radius-md, 0.375rem);
  }
  .rounded-xl {
    border-radius: var(--radius-xl, 0.75rem);
  }
  .\!border-0 {
    border-style: var(--tw-border-style) !important;
    border-width: 0px !important;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-gray-200 {
    border-color: var(--color-gray-200, oklch(0.928 0.006 264.531));
  }
  .border-gray-600 {
    border-color: var(--color-gray-600, oklch(0.446 0.03 256.802));
  }
  .border-gray-700 {
    border-color: var(--color-gray-700, oklch(0.373 0.034 259.733));
  }
  .border-gray-800 {
    border-color: var(--color-gray-800, oklch(0.278 0.033 256.848));
  }
  .border-slate-200 {
    border-color: var(--color-slate-200, oklch(0.929 0.013 255.508));
  }
  .border-slate-300 {
    border-color: var(--color-slate-300, oklch(0.869 0.022 252.894));
  }
  .\!bg-yellow-200\/40 {
    background-color: color-mix(in oklab, var(--color-yellow-200, oklch(0.945 0.129 101.54)) 40%, transparent) !important;
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300, oklch(0.809 0.105 251.813));
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200, oklch(0.928 0.006 264.531));
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300, oklch(0.872 0.01 258.338));
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800, oklch(0.278 0.033 256.848));
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900, oklch(0.21 0.034 264.665));
  }
  .bg-green-300 {
    background-color: var(--color-green-300, oklch(0.871 0.15 154.449));
  }
  .bg-red-300 {
    background-color: var(--color-red-300, oklch(0.808 0.114 19.571));
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white, #fff);
  }
  .bg-radial-\[at_50\%_75\%\] {
    --tw-gradient-position: at 50% 75%;
    background-image: radial-gradient(var(--tw-gradient-stops,at 50% 75%));
  }
  .from-gray-50 {
    --tw-gradient-from: var(--color-gray-50, oklch(0.985 0.002 247.839));
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-gray-100 {
    --tw-gradient-via: var(--color-gray-100, oklch(0.967 0.003 264.542));
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-gray-50 {
    --tw-gradient-to: var(--color-gray-50, oklch(0.985 0.002 247.839));
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-black {
    fill: var(--color-black, #000);
  }
  .fill-green-600 {
    fill: var(--color-green-600, oklch(0.627 0.194 149.214));
  }
  .fill-red-500 {
    fill: var(--color-red-500, oklch(0.637 0.237 25.331));
  }
  .stroke-black {
    stroke: var(--color-black, #000);
  }
  .stroke-green-500 {
    stroke: var(--color-green-500, oklch(0.723 0.219 149.579));
  }
  .p-0 {
    padding: calc(var(--spacing, 0.25rem) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing, 0.25rem) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing, 0.25rem) * 2);
  }
  .p-12 {
    padding: calc(var(--spacing, 0.25rem) * 12);
  }
  .px-2 {
    padding-inline: calc(var(--spacing, 0.25rem) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing, 0.25rem) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing, 0.25rem) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing, 0.25rem) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl, 1.5rem);
    line-height: var(--tw-leading, var(--text-2xl--line-height, calc(2 / 1.5)));
  }
  .text-sm {
    font-size: var(--text-sm, 0.875rem);
    line-height: var(--tw-leading, var(--text-sm--line-height, calc(1.25 / 0.875)));
  }
  .text-xl {
    font-size: var(--text-xl, 1.25rem);
    line-height: var(--tw-leading, var(--text-xl--line-height, calc(1.75 / 1.25)));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold, 700);
    font-weight: var(--font-weight-bold, 700);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium, 500);
    font-weight: var(--font-weight-medium, 500);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold, 600);
    font-weight: var(--font-weight-semibold, 600);
  }
  .font-thin {
    --tw-font-weight: var(--font-weight-thin, 100);
    font-weight: var(--font-weight-thin, 100);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest, 0.1em);
    letter-spacing: var(--tracking-widest, 0.1em);
  }
  .text-gray-200 {
    color: var(--color-gray-200, oklch(0.928 0.006 264.531));
  }
  .text-gray-300 {
    color: var(--color-gray-300, oklch(0.872 0.01 258.338));
  }
  .text-gray-800 {
    color: var(--color-gray-800, oklch(0.278 0.033 256.848));
  }
  .text-green-400 {
    color: var(--color-green-400, oklch(0.792 0.209 151.711));
  }
  .text-red-500 {
    color: var(--color-red-500, oklch(0.637 0.237 25.331));
  }
  .text-slate-700 {
    color: var(--color-slate-700, oklch(0.372 0.044 257.287));
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function, cubic-bezier(0.4, 0, 0.2, 1)));
    transition-duration: var(--tw-duration, var(--default-transition-duration, 150ms));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .group-hover\:block {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: block;
      }
    }
  }
  .peer-checked\:bg-blue-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-blue-600, oklch(0.546 0.245 262.881));
    }
  }
  .peer-focus\:ring-4 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-focus\:ring-blue-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-blue-300, oklch(0.809 0.105 251.813));
    }
  }
  .peer-focus\:outline-none {
    &:is(:where(.peer):focus ~ *) {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .placeholder\:text-gray-500 {
    &::placeholder {
      color: var(--color-gray-500, oklch(0.551 0.027 264.364));
    }
  }
  .placeholder\:text-slate-400 {
    &::placeholder {
      color: var(--color-slate-400, oklch(0.704 0.04 256.788));
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:start-\[2px\] {
    &::after {
      content: var(--tw-content);
      inset-inline-start: 2px;
    }
  }
  .after\:top-\[2px\] {
    &::after {
      content: var(--tw-content);
      top: 2px;
    }
  }
  .after\:h-5 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing, 0.25rem) * 5);
    }
  }
  .after\:w-5 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing, 0.25rem) * 5);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:border {
    &::after {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .after\:border-gray-300 {
    &::after {
      content: var(--tw-content);
      border-color: var(--color-gray-300, oklch(0.872 0.01 258.338));
    }
  }
  .after\:bg-white {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-white, #fff);
    }
  }
  .after\:leading-\[16px\] {
    &::after {
      content: var(--tw-content);
      --tw-leading: 16px;
      line-height: 16px;
    }
  }
  .after\:transition-all {
    &::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function, cubic-bezier(0.4, 0, 0.2, 1)));
      transition-duration: var(--tw-duration, var(--default-transition-duration, 150ms));
    }
  }
  .after\:content-\[\'☀\'\] {
    &::after {
      content: var(--tw-content);
      --tw-content: '☀';
      content: var(--tw-content);
    }
  }
  .peer-checked\:after\:translate-x-full {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .peer-checked\:after\:border-white {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        border-color: var(--color-white, #fff);
      }
    }
  }
  .peer-checked\:after\:content-\[\'🌙\'\] {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-content: '🌙';
        content: var(--tw-content);
      }
    }
  }
  .hover\:border-gray-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-500, oklch(0.551 0.027 264.364));
      }
    }
  }
  .hover\:border-slate-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-slate-300, oklch(0.869 0.022 252.894));
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200, oklch(0.928 0.006 264.531));
      }
    }
  }
  .hover\:bg-gray-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700, oklch(0.373 0.034 259.733));
      }
    }
  }
  .hover\:bg-gray-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-900, oklch(0.21 0.034 264.665));
      }
    }
  }
  .hover\:bg-green-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-500, oklch(0.723 0.219 149.579));
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white, #fff);
      }
    }
  }
  .focus\:border-gray-400 {
    &:focus {
      border-color: var(--color-gray-400, oklch(0.707 0.022 261.325));
    }
  }
  .focus\:border-slate-400 {
    &:focus {
      border-color: var(--color-slate-400, oklch(0.704 0.04 256.788));
    }
  }
  .focus\:shadow {
    &:focus {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-green-400 {
    &:focus {
      --tw-ring-color: var(--color-green-400, oklch(0.792 0.209 151.711));
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:bg-transparent {
    &:disabled {
      background-color: transparent;
    }
  }
  .disabled\:text-slate-600 {
    &:disabled {
      color: var(--color-slate-600, oklch(0.446 0.043 257.281));
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .rtl\:peer-checked\:after\:-translate-x-full {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      &:is(:where(.peer):checked ~ *) {
        &::after {
          content: var(--tw-content);
          --tw-translate-x: -100%;
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .dark\:border-gray-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-600, oklch(0.446 0.03 256.802));
    }
  }
  .dark\:border-gray-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700, oklch(0.373 0.034 259.733));
    }
  }
  .dark\:bg-gray-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-700, oklch(0.373 0.034 259.733));
    }
  }
  .dark\:bg-gray-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800, oklch(0.278 0.033 256.848));
    }
  }
  .dark\:bg-gray-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900, oklch(0.21 0.034 264.665));
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:fill-green-400 {
    &:where(.dark, .dark *) {
      fill: var(--color-green-400, oklch(0.792 0.209 151.711));
    }
  }
  .dark\:fill-red-300 {
    &:where(.dark, .dark *) {
      fill: var(--color-red-300, oklch(0.808 0.114 19.571));
    }
  }
  .dark\:fill-white {
    &:where(.dark, .dark *) {
      fill: var(--color-white, #fff);
    }
  }
  .dark\:stroke-green-300 {
    &:where(.dark, .dark *) {
      stroke: var(--color-green-300, oklch(0.871 0.15 154.449));
    }
  }
  .dark\:stroke-white {
    &:where(.dark, .dark *) {
      stroke: var(--color-white, #fff);
    }
  }
  .dark\:text-gray-200 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-200, oklch(0.928 0.006 264.531));
    }
  }
  .dark\:text-gray-300 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-300, oklch(0.872 0.01 258.338));
    }
  }
  .dark\:text-gray-500 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-500, oklch(0.551 0.027 264.364));
    }
  }
  .dark\:shadow-md {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-gray-800 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-800, oklch(0.278 0.033 256.848));
    }
  }
  .dark\:peer-checked\:bg-blue-600 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        background-color: var(--color-blue-600, oklch(0.546 0.245 262.881));
      }
    }
  }
  .dark\:peer-focus\:ring-blue-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-blue-800, oklch(0.424 0.199 265.638));
      }
    }
  }
  .dark\:placeholder\:text-gray-500 {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: var(--color-gray-500, oklch(0.551 0.027 264.364));
      }
    }
  }
  .dark\:hover\:border-gray-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-gray-500, oklch(0.551 0.027 264.364));
        }
      }
    }
  }
  .dark\:hover\:border-green-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-green-500, oklch(0.723 0.219 149.579));
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700, oklch(0.373 0.034 259.733));
        }
      }
    }
  }
  .dark\:hover\:bg-green-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-green-600, oklch(0.627 0.194 149.214));
        }
      }
    }
  }
  .dark\:focus\:border-gray-400 {
    &:where(.dark, .dark *) {
      &:focus {
        border-color: var(--color-gray-400, oklch(0.707 0.022 261.325));
      }
    }
  }
  .dark\:focus\:ring-green-400 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: var(--color-green-400, oklch(0.792 0.209 151.711));
      }
    }
  }
  .dark\:disabled\:bg-transparent {
    &:where(.dark, .dark *) {
      &:disabled {
        background-color: transparent;
      }
    }
  }
  .dark\:hover\:disabled\:border-gray-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          &:disabled {
            border-color: var(--color-gray-500, oklch(0.551 0.027 264.364));
          }
        }
      }
    }
  }
  .\[\&\>\*\:first-child\]\:block {
    &>*:first-child {
      display: block;
    }
  }
}
.Wt-panel .body {
  padding: calc(var(--spacing, 0.25rem) * 0) !important;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
